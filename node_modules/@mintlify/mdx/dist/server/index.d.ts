import type { CompileMDXResult, MDXRemoteProps } from "next-mdx-remote/rsc";
import type { SerializeOptions } from "../types/index.js";
export declare const getCompiledMdx: ({ source, mdxOptions, scope, parseFrontmatter, }: {
    source: string;
    mdxOptions?: SerializeOptions["mdxOptions"];
    scope?: SerializeOptions["scope"];
    parseFrontmatter?: SerializeOptions["parseFrontmatter"];
}) => Promise<import("next-mdx-remote/rsc").MDXRemoteSerializeResult<Record<string, unknown>, Record<string, unknown>>>;
export declare const getCompiledServerMdx: <TFrontmatter = Record<string, unknown>>({ source, mdxOptions, components, parseFrontmatter, }: {
    source: MDXRemoteProps["source"];
    mdxOptions?: SerializeOptions["mdxOptions"];
    components?: MDXRemoteProps["components"];
    parseFrontmatter?: SerializeOptions["parseFrontmatter"];
}) => Promise<CompileMDXResult<TFrontmatter>>;
